[{"D:\\Yashdeep\\MERN Project\\todo\\src\\index.js":"1","D:\\Yashdeep\\MERN Project\\todo\\src\\App.js":"2","D:\\Yashdeep\\MERN Project\\todo\\src\\components\\header.js":"3","D:\\Yashdeep\\MERN Project\\todo\\src\\pages\\home\\home.js":"4","D:\\Yashdeep\\MERN Project\\todo\\src\\pages\\dashboard\\dashboard.js":"5","D:\\Yashdeep\\MERN Project\\todo\\src\\components\\dashboardContent.js":"6","D:\\Yashdeep\\MERN Project\\todo\\src\\components\\todoItem.js":"7","D:\\Yashdeep\\MERN Project\\todo\\src\\components\\footer.js":"8"},{"size":484,"mtime":1610652616706,"results":"9","hashOfConfig":"10"},{"size":656,"mtime":1610803743239,"results":"11","hashOfConfig":"10"},{"size":1254,"mtime":1610805165534,"results":"12","hashOfConfig":"10"},{"size":2445,"mtime":1610709742131,"results":"13","hashOfConfig":"10"},{"size":1019,"mtime":1610803525824,"results":"14","hashOfConfig":"10"},{"size":4161,"mtime":1610885127690,"results":"15","hashOfConfig":"10"},{"size":2112,"mtime":1610885361480,"results":"16","hashOfConfig":"10"},{"size":1157,"mtime":1610806206057,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"226klt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Yashdeep\\MERN Project\\todo\\src\\index.js",[],["36","37"],"D:\\Yashdeep\\MERN Project\\todo\\src\\App.js",[],"D:\\Yashdeep\\MERN Project\\todo\\src\\components\\header.js",[],"D:\\Yashdeep\\MERN Project\\todo\\src\\pages\\home\\home.js",[],"D:\\Yashdeep\\MERN Project\\todo\\src\\pages\\dashboard\\dashboard.js",[],"D:\\Yashdeep\\MERN Project\\todo\\src\\components\\dashboardContent.js",["38","39"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport TodoItem from \"./todoItem\";\r\nimport EmptyList from \"../assets/clip-list-is-empty.png\";\r\nimport \"../App.css\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dashboard: {\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: \"75vh\",\r\n    overflowY: \"hidden\",\r\n  },\r\n  label: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: \"bold\",\r\n    margin: \"1.5%\",\r\n    color: \"#403D52\",\r\n  },\r\n}));\r\n\r\nconst DashboardContent = () => {\r\n  const classes = useStyles();\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [newItem, setNewItem] = useState(\"\");\r\n  const [currDay, setCurrDay] = useState();\r\n\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const setDay = () => {\r\n    let date = new Date();\r\n    setCurrDay(days[date.getDay()]);\r\n  };\r\n\r\n  const getTasks = async () => {\r\n    axios\r\n      .get(process.env.REACT_APP_BACKEND_URL + \"/getTasks\")\r\n      .then((res) => {\r\n        setTaskList(res.data.tasks);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDay();\r\n    getTasks();\r\n  }, []);\r\n\r\n  const changeHandler = (event) => {\r\n    setNewItem(event.target.value);\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    let newItemObj = {};\r\n    newItemObj.status = false;\r\n    newItemObj.title = newItem;\r\n    axios\r\n      .post(process.env.REACT_APP_BACKEND_URL + \"/createTask\", newItemObj)\r\n      .then((res) => {\r\n        newItemObj._id = res.data.task._id;\r\n        setTaskList([...taskList, newItemObj]);\r\n      });\r\n    setNewItem(\"\");\r\n  };\r\n\r\n  const removeItem = async (id) => {\r\n    axios\r\n      .delete(process.env.REACT_APP_BACKEND_URL + `/deleteTask/${id}`)\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        getTasks();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dashboard}>\r\n      <label className={classes.label}>Have a productive {currDay}.</label>\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          borderRadius: \"3px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          margin: \"10px 0 20px 0\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            border: \"none\",\r\n            width: \"85%\",\r\n            backgroundColor: \"white\",\r\n            height: \"40px\",\r\n            paddingLeft: \"3%\",\r\n          }}\r\n          placeholder=\"Add item...\"\r\n          value={newItem}\r\n          onChange={changeHandler}\r\n        />\r\n        <div\r\n          style={{\r\n            width: \"15%\",\r\n            backgroundColor: \"white\",\r\n            height: \"40px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          onClick={addNewItem}\r\n        >\r\n          <i\r\n            className=\"fas fa-plus\"\r\n            style={{ fontSize: \"1.5em\", cursor: \"pointer\" }}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"items\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {taskList.length > 0 ? (\r\n          taskList.map((task, index) => (\r\n            <TodoItem\r\n              key={task._id}\r\n              title={task.title}\r\n              status={task.status}\r\n              id={task._id}\r\n              removeItem={removeItem}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div style={{ width: \"350px\", height: \"100%\" }}>\r\n            <img\r\n              src={EmptyList}\r\n              alt=\"Empty image\"\r\n              style={{ width: \"100%\", height: \"85%\" }}\r\n            />\r\n            <label>Wohooo!!! You do not have any task do to.</label>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n","D:\\Yashdeep\\MERN Project\\todo\\src\\components\\todoItem.js",[],"D:\\Yashdeep\\MERN Project\\todo\\src\\components\\footer.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":62,"column":6,"nodeType":"46","endLine":62,"endColumn":8,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":154,"column":13,"nodeType":"50","endLine":158,"endColumn":15},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDay'. Either include it or remove the dependency array.","ArrayExpression",["53"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [setDay]",{"range":"56","text":"57"},[1403,1405],"[setDay]"]